apply plugin: 'java'
apply plugin: 'eclipse'

sourceCompatibility = theSourceCompatibility
targetCompatibility = theSourceCompatibility

dependencies{
	compile group: 'info.hinemos', name: 'hinemos-common', version: version
	//compile files('../common/build/libs/HinemosCommon.jar')
	compile group: 'info.hinemos', name: 'agent-ws', version: version
	//compile files("../manager/build/libs/AgentWS.jar")

	compile group: 'commons-logging', name: 'commons-logging', version: '1.2'
	compile group: 'log4j', name: 'log4j', version: '1.2.17'
	compile group: 'commons-codec', name: 'commons-codec', version: '1.10'
	compile group: 'commons-io', name: 'commons-io', version: '2.5'

	compile group: 'org.pcap4j', name: 'pcap4j-core', version: '1.7.1'

	compile group: 'net.java.dev.jna', name: 'jna', version: '4.2.2'
	compile group: 'net.java.dev.jna', name: 'jna-platform', version: '4.2.2'

	// JNA library
	compile group: 'net.java.dev.jna', name: 'jna', version: '4.3.0'
	compile group: 'net.java.dev.jna', name: 'jna-platform', version: '4.3.0'

	// For Manager Cli
	compile group: 'commons-cli', name: 'commons-cli', version: '1.3.1'
}

jar.baseName theName
jar.manifest = project.manifest{ from sharedManifest }
eclipse{
	project{
		name = theJarName
	}
}

sourceSets{
	manager_cli{
		java{
			srcDir 'src_manager_cli'
		}
		compileClasspath += sourceSets.main.runtimeClasspath
	}
}


// Doc
task sourcesJar(type: Jar, dependsOn: classes){
	baseName theName
	classifier = 'sources'
	from sourceSets.main.allSource
}
task javadocJar(type: Jar, dependsOn: javadoc){
	baseName theName
	classifier = 'javadoc'
	from javadoc.destinationDir
}
artifacts{
	archives sourcesJar
	//archives javadocJar
}

// Build HinemosManagerCli
task deployManagerCli(type: Jar){
	description 'Generate HinemosManagerCli.jar'
	archiveName = 'HinemosManagerCli.jar'
	from sourceSets.manager_cli.output

	manifest = project.manifest{ from sharedManifest }
}
