<?xml version="1.0"?>
<!--
   Hinemos (http://www.hinemos.info/)

   Copyright (c) 2018 NTT DATA INTELLILINK Corporation. All rights reserved.
 -->
<project name="HinemosManager" default="all" basedir=".">

	<property file="../HinemosCommon/ant_config/build_common.properties" />
	<import file="../HinemosCommon/ant_config/build_common.xml"/>
	<import file="platform_switch/switch.xml"/>

	<property name="project.name" value="HinemosManager" />
	<property name="jar.file" value="${jar.HinemosManager}" />
	<property name="build.dir" value="build/manager" />
	<property name="build.mdb.dir" value="build/HinemosMDB.jar" />
	<property name="agentws.dir" value="build/agentws" />
	<property name="managercliws.dir" value="build/managercliws" />
	<property name="wsdl.dir" value="build/wsdl" />
	<property name="wsdlsrc.dir" value="build/wsdlsrc"/>
	<property name="jar.include.properties" value="true" />
	<property name="jar.include.xml" value="true" />
	<property name="jpa.comment.start" value="&lt;!-- " />
	<property name="jpa.comment.end" value=" --&gt;" />
	<property name="rhel.dir" value="rhel" />
	<property name="win.dir" value="win" />
	<property name="jar.rhel" value="HinemosManagerRhel.jar" />
	<property name="jar.win" value="HinemosManagerWin.jar" />
	<property name="war.dir" value="build/war" />
	<property name="rest.proxy.dir" value="build/rest_proxy" />
	<property name="jar.rest.proxy" value="${jar.RestProxy}" />
	<property name="jar.rest.proxy.src" value="${jar.RestProxySrc}" />
	<property name="jar.rest.proxy.tests" value="openapi-java-client-tests.jar" />
	<property name="jar.rest.proxy.javadoc" value="openapi-java-client-javadoc.jar" />
	<!-- Dependency -->
	<target name="dependency" depends="check_dependency">
		<fail unless="HinemosCommon.built" message="file not found. (HinemosCommon/${jar.HinemosCommon})" />
	</target>

	<!-- Classpath -->
	<path id="id.compile.classpath.local">
		<fileset dir="../">
			<include name="HinemosCommon/${jar.dir}/${jar.HinemosCommon}" />
		</fileset>
		<fileset dir="./lib">
			<include name="**/*.jar" />
			<exclude name="**/*sources.jar" />
		</fileset>
		<fileset dir="./lib_rest">
			<exclude name="**/*sources.jar" />
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="./commonlib">
			<include name="**/*.jar" />
			<exclude name="**/*sources.jar" />
		</fileset>
		<fileset dir="./commonlib_rest">
			<exclude name="**/*sources.jar" />
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="./platform_switch/lib_platform_win">
			<exclude name="**/*sources.jar" />
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="./platform_switch/commonlib_platform_win">
			<exclude name="**/*sources.jar" />
			<include name="**/*.jar" />
		</fileset>
		<path refid="id.compile.classpath" />
	</path>

	<path id="id.compile.sourcepath.local">
		<pathelement path="src_accesscontrol" />
		<pathelement path="src_analytics" />
		<pathelement path="src_calendar" />
		<pathelement path="src_collect" />
		<pathelement path="src_collectmaster" />
		<pathelement path="src_commons" />
		<pathelement path="src_hinemosagent" />

		<pathelement path="src_http" />
		<pathelement path="src_jobmanagement" />
		<pathelement path="src_logfile" />
		<pathelement path="src_maintenance" />
		<pathelement path="src_monitor" />

		<pathelement path="src_nodemap" />

		<pathelement path="src_notify" />
		<pathelement path="src_performance" />
		<pathelement path="src_ping" />
		<pathelement path="src_poller" />
		<pathelement path="src_port" />

		<pathelement path="src_priority" />
		<pathelement path="src_process" />
		<pathelement path="src_repository" />

		<pathelement path="src_snmptrap" />
		<pathelement path="src_snmp" />
		<pathelement path="src_sql" />
		<pathelement path="src_systemlog" />
		<pathelement path="src_vm" />

		<pathelement path="src_selfcheck" />
		<pathelement path="src_custom" />
		<pathelement path="src_winservice" />
		<pathelement path="src_winevent" />
		<pathelement path="src_ws" />

		<pathelement path="src_jmx" />
		<pathelement path="src_infra" />

		<pathelement path="src_hub" />
		<pathelement path="src_customtrap" />

		<pathelement path="src_bootstrap" />

		<pathelement path="src_reporting" />
		
		<pathelement path="src_rest" />

		<pathelement path="src_rpa" />
		
		<pathelement path="src_grafana" />

		<pathelement path="./build/tmp/src_platform" />
		<pathelement path="src_binary" />
		<pathelement path="src_xcloud"/>
	    <pathelement path="src_filtersetting" />

		<pathelement path="src_sdml" />
	</path>

	<target name="compile" description="Compile Java sources">
		<javac
			destdir="${build.dir}/${class.dir}"
			failonerror="true"
			classpathref="id.compile.classpath.local"
			source="${compile.version.manager}"
			target="${compile.version.manager}"
			encoding="${compile.encode}"
			includeantruntime="false"
			debug="on">
			<compilerarg value="-XDignore.symbol.file" />
			<src path="src_accesscontrol" />
			<src path="src_analytics" />
			<src path="src_calendar" />
			<src path="src_collect" />
			<src path="src_collectmaster" />
			<src path="src_commons" />
			<src path="src_hinemosagent" />

			<src path="src_http" />
			<src path="src_jobmanagement" />
			<src path="src_logfile" />
			<src path="src_maintenance" />
			<src path="src_monitor" />

			<src path="src_nodemap" />

			<src path="src_notify" />
			<src path="src_performance" />
			<src path="src_ping" />
			<src path="src_poller" />
			<src path="src_port" />

			<src path="src_priority" />
			<src path="src_process" />
			<src path="src_repository" />

			<src path="src_snmptrap" />
			<src path="src_snmp" />
			<src path="src_sql" />
			<src path="src_systemlog" />
			<src path="src_vm" />

			<src path="src_ws" />
			<src path="src_selfcheck" />
			<src path="src_custom" />
			<src path="src_winservice" />
			<src path="src_winevent" />
			<src path="src_bootstrap" />

			<src path="src_jmx" />
			<src path="src_infra" />

			<src path="src_hub" />
			<src path="src_customtrap" />

			<src path="src_reporting" />

			<src path="src_rpa" />
			
			<src path="src_rest" />
			
			<src path="./build/tmp/src_platform" />
			<src path="src_binary" />
			<src path="src_xcloud" />
			<src path="src_filtersetting" />

			<src path="src_sdml" />
			
			<src path="src_grafana" />

			<src path="resources" />
		</javac>
	</target>

	<target name="jar_main" description="Generate JAR file">
		<jar jarfile="${jar.dir}/${jar.file}" manifest="${build.dir}/MANIFEST.MF">
			<fileset dir="${build.dir}/${class.dir}">
				<include name="**/*.*"/>
				<include name="**/model/*.*"/>
				<exclude name="**/platform/**"/>
			</fileset>
			<fileset dir="src_accesscontrol">
				<include name="**/*.java" if="jar.include.src"/>
				<include name="**/model/*.java" if="jar.include.src"/>
				<include name="META-INF/*.xml" if="jar.include.xml"/>
			</fileset>
			<fileset dir="src_analytics">
				<include name="**/*.java" if="jar.include.src"/>
				<include name="**/model/*.java" if="jar.include.src"/>
				<include name="META-INF/*.xml" if="jar.include.xml"/>
			</fileset>
			<fileset dir="src_binary">
				<include name="**/*.java" if="jar.include.src"/>
				<include name="**/model/*.java" if="jar.include.src"/>
			</fileset>
			<fileset dir="src_calendar">
				<include name="**/*.java" if="jar.include.src"/>
				<include name="**/model/*.java" if="jar.include.src"/>
				<include name="META-INF/*.xml" if="jar.include.xml"/>
			</fileset>
			<fileset dir="src_collect">
				<include name="**/*.java" if="jar.include.src"/>
				<include name="**/model/*.java" if="jar.include.src"/>
				<include name="META-INF/*.xml" if="jar.include.xml"/>
			</fileset>
			<fileset dir="src_collectmaster">
				<include name="**/*.java" if="jar.include.src"/>
				<exclude name="**/model/*.java" if="jar.include.src"/>
			</fileset>
			<fileset dir="src_commons">
				<include name="**/*.java" if="jar.include.src"/>
				<exclude name="**/model/*.java" if="jar.include.src"/>
				<include name="**/*.properties" if="jar.include.properties"/>
			</fileset>
			<fileset dir="src_custom">
				<include name="**/*.java" if="jar.include.src"/>
				<include name="**/model/*.java" if="jar.include.src"/>
				<include name="META-INF/*.xml" if="jar.include.xml"/>
			</fileset>
			<fileset dir="src_hinemosagent">
				<include name="**/*.java" if="jar.include.src"/>
				<exclude name="**/model/*.java" if="jar.include.src"/>
			</fileset>
			<fileset dir="src_http">
				<include name="**/*.java" if="jar.include.src"/>
				<include name="**/model/*.java" if="jar.include.src"/>
				<include name="META-INF/*.xml" if="jar.include.xml"/>
			</fileset>
			<fileset dir="src_jobmanagement">
				<include name="**/*.java" if="jar.include.src"/>
				<include name="**/model/*.java" if="jar.include.src"/>
				<include name="META-INF/*.xml" if="jar.include.xml"/>
			</fileset>
			<fileset dir="src_logfile">
				<include name="**/*.java" if="jar.include.src"/>
				<include name="**/model/*.java" if="jar.include.src"/>
				<include name="META-INF/*.xml" if="jar.include.xml"/>
			</fileset>
			<fileset dir="src_maintenance">
				<include name="**/*.java" if="jar.include.src"/>
				<include name="**/model/*.java" if="jar.include.src"/>
				<include name="META-INF/*.xml" if="jar.include.xml"/>
			</fileset>
			<fileset dir="src_monitor">
				<include name="**/*.java" if="jar.include.src"/>
				<include name="**/model/*.java" if="jar.include.src"/>
				<include name="META-INF/*.xml" if="jar.include.xml"/>
			</fileset>
			<fileset dir="src_nodemap">
				<include name="**/*.java" if="jar.include.src"/>
				<include name="**/model/*.java" if="jar.include.src"/>
				<include name="META-INF/*.xml" if="jar.include.xml"/>
			</fileset>
			<fileset dir="src_notify">
				<include name="**/*.java" if="jar.include.src"/>
				<include name="**/model/*.java" if="jar.include.src"/>
				<include name="META-INF/*.xml" if="jar.include.xml"/>
			</fileset>
			<fileset dir="src_performance">
				<include name="**/*.java" if="jar.include.src"/>
				<include name="**/model/*.java" if="jar.include.src"/>
				<include name="META-INF/*.xml" if="jar.include.xml"/>
			</fileset>
			<fileset dir="src_ping">
				<include name="**/*.java" if="jar.include.src"/>
				<include name="**/model/*.java" if="jar.include.src"/>
				<include name="META-INF/*.xml" if="jar.include.xml"/>
			</fileset>
			<fileset dir="src_poller">
				<include name="**/*.java" if="jar.include.src"/>
				<exclude name="**/model/*.java" if="jar.include.src"/>
			</fileset>
			<fileset dir="src_port">
				<include name="**/*.java" if="jar.include.src"/>
				<include name="**/model/*.java" if="jar.include.src"/>
				<include name="META-INF/*.xml" if="jar.include.xml"/>
			</fileset>
			<fileset dir="src_priority">
				<include name="**/*.java" if="jar.include.src"/>
				<include name="**/model/*.java" if="jar.include.src"/>
				<include name="META-INF/*.xml" if="jar.include.xml"/>
			</fileset>
			<fileset dir="src_process">
				<include name="**/*.java" if="jar.include.src"/>
				<include name="**/model/*.java" if="jar.include.src"/>
				<include name="META-INF/*.xml" if="jar.include.xml"/>
			</fileset>
			<fileset dir="src_repository">
				<include name="**/*.java" if="jar.include.src"/>
				<include name="**/model/*.java" if="jar.include.src"/>
				<include name="META-INF/*.xml" if="jar.include.xml"/>
			</fileset>
			<fileset dir="src_snmptrap">
				<include name="**/*.java" if="jar.include.src"/>
				<include name="**/model/*.java" if="jar.include.src"/>
				<include name="META-INF/*.xml" if="jar.include.xml"/>
			</fileset>
			<fileset dir="src_snmp">
				<include name="**/*.java" if="jar.include.src"/>
				<include name="**/model/*.java" if="jar.include.src"/>
				<include name="META-INF/*.xml" if="jar.include.xml"/>
			</fileset>
			<fileset dir="src_sql">
				<include name="**/*.java" if="jar.include.src"/>
				<include name="**/model/*.java" if="jar.include.src"/>
				<include name="META-INF/*.xml" if="jar.include.xml"/>
			</fileset>
			<fileset dir="src_systemlog">
				<include name="**/*.java" if="jar.include.src"/>
				<exclude name="**/model/*.java" if="jar.include.src"/>
			</fileset>
			<fileset dir="src_vm">
				<include name="**/*.java" if="jar.include.src"/>
				<include name="**/model/*.java" if="jar.include.src"/>
				<include name="META-INF/*.xml" if="jar.include.xml"/>
			</fileset>
			<fileset dir="src_winservice">
				<include name="**/*.java" if="jar.include.src"/>
				<include name="**/model/*.java" if="jar.include.src"/>
				<include name="META-INF/*.xml" if="jar.include.xml"/>
			</fileset>
			<fileset dir="src_winevent">
				<include name="**/*.java" if="jar.include.src"/>
				<include name="**/model/*.java" if="jar.include.src"/>
				<include name="META-INF/*.xml" if="jar.include.xml"/>
			</fileset>
			<fileset dir="src_ws">
				<include name="**/*.java" if="jar.include.src"/>
				<exclude name="**/model/*.java" if="jar.include.src"/>
			</fileset>
			<fileset dir="src_selfcheck">
				<include name="**/*.java" if="jar.include.src"/>
				<exclude name="**/model/*.java" if="jar.include.src"/>
			</fileset>
			<fileset dir="src_jmx">
				<include name="**/*.java" if="jar.include.src"/>
				<include name="**/model/*.java" if="jar.include.src"/>
				<include name="META-INF/*.xml" if="jar.include.xml"/>
			</fileset>
			<fileset dir="src_infra">
				<include name="**/*.java" if="jar.include.src"/>
				<include name="**/model/*.java" if="jar.include.src"/>
				<include name="META-INF/*.xml" if="jar.include.xml"/>
			</fileset>
			<fileset dir="src_hub">
				<include name="**/*.java" if="jar.include.src"/>
				<include name="**/model/*.java" if="jar.include.src"/>
				<include name="META-INF/*.xml" if="jar.include.xml"/>
				<include name="META-INF/services/*" />
			</fileset>
			<fileset dir="src_customtrap">
				<include name="**/*.java" if="jar.include.src"/>
				<include name="**/model/*.java" if="jar.include.src"/>
				<include name="META-INF/*.xml" if="jar.include.xml"/>
			</fileset>

			<fileset dir="src_bootstrap">
				<include name="**/*.java" if="jar.include.src"/>
				<include name="**/model/*.java" if="jar.include.src"/>
				<include name="META-INF/*.xml" if="jar.include.xml"/>
				<include name="META-INF/services/*" />
			</fileset>
			<fileset dir="src_rpa">
				<include name="**/*.java" if="jar.include.src"/>
				<include name="**/model/*.java" if="jar.include.src"/>
				<include name="META-INF/*.xml" if="jar.include.xml"/>
			</fileset>
			<fileset dir="src_reporting">
				<include name="**/*.java" if="jar.include.src" />
				<include name="**/model/*.java" if="jar.include.src" />
				<include name="META-INF/*.xml" if="jar.include.xml" />
				<include name="META-INF/services/*" />
				<include name="**/*.properties" if="jar.include.properties"/>
			</fileset>
			<fileset dir="src_xcloud">
				<include name="**/*.java" if="jar.include.src" />
				<include name="**/model/*.java" if="jar.include.src" />
				<include name="META-INF/*.xml" if="jar.include.xml" />
				<include name="**/*.properties" if="jar.include.properties"/>
			</fileset>
			<fileset dir="src_rest">
				<include name="**/*.java" if="jar.include.src" />
				<include name="**/model/*.java" if="jar.include.src" />
				<include name="META-INF/*.xml" if="jar.include.xml" />
				<include name="**/*.properties" if="jar.include.properties"/>
			</fileset>
			<fileset dir="src_filtersetting">
				<include name="**/*.java" if="jar.include.src" />
				<include name="META-INF/*.xml" if="jar.include.xml" />
			</fileset>

			<fileset dir="src_sdml">
				<include name="**/*.java" if="jar.include.src" />
				<include name="**/model/*.java" if="jar.include.src" />
				<include name="META-INF/*.xml" if="jar.include.xml" />
			</fileset>
			<fileset dir="src_grafana">
				<include name="**/*.java" if="jar.include.src"/>
				<include name="**/model/*.java" if="jar.include.src"/>
				<include name="META-INF/*.xml" if="jar.include.xml"/>
			</fileset>
		</jar>
	</target>

	<macrodef name="jar_diff.mac" description="Generate JAR file">
		<attribute name="jarname" />
		<sequential>
			<jar jarfile="${jar.dir}/@{jarname}" manifest="${build.dir}/MANIFEST.MF">
				<fileset dir="${build.dir}/${class.dir}">
					<include name="**/platform/**"/>
				</fileset>
				<fileset dir="./build/tmp/src_platform">
					<include name="**/*.java" if="jar.include.src"/>
					<include name="**/model/*.java" if="jar.include.src"/>
					<include name="META-INF/*.xml" if="jar.include.xml"/>
				</fileset>
			</jar>
		</sequential>
	</macrodef>
	<target name="jar_diff_rhel">
		<jar_diff.mac jarname="${jar.rhel}" />
	</target>
	<target name="jar_diff_win">
		<jar_diff.mac jarname="${jar.win}" />
	</target>

	<!-- jpa configuration (EclipseLink) -->
	<macrodef name="jpa_config.mac" description="generate jpa configuration">
		<attribute name="dir.lib" />
		<attribute name="dir.from" />
		<attribute name="dir.to" />
		<attribute name="jar.diff" />
		<attribute name="dir.plugin" />
		<attribute name="reporting.jar.diff" />
		<sequential>
			<property name="jpa.jar-file.package" value="&lt;jar-file&gt;@{dir.lib}/HinemosManager.jar&lt;/jar-file&gt;" />
			<property name="jpa.jar-win-file.package" value="&lt;jar-file&gt;@{dir.lib}/@{jar.diff}&lt;/jar-file&gt;" />
			<property name="jpa.jar-reporting-file.package" value="&lt;jar-file&gt;@{dir.plugin}/HinemosReporting.jar&lt;/jar-file&gt;" />
			<property name="jpa.jar-reporting-win-file.package" value="&lt;jar-file&gt;@{dir.plugin}/@{reporting.jar.diff}&lt;/jar-file&gt;" />
			<copy todir="../HinemosManager/build/META-INF_@{dir.to}" overwrite="true">
				<fileset dir="../HinemosManager/resources/META-INF">
					<include name="**/*.xml" />
				</fileset>
			</copy>
			<replace file="../HinemosManager/build/META-INF_@{dir.to}/persistence.xml"
				token="${jpa.comment.start}add jar-file here${jpa.comment.end}"
				value="${jpa.jar-file.package}&#x0D;&#x0A;&#x09;&#x09;${jpa.jar-win-file.package}&#x0D;&#x0A;&#x09;&#x09;${jpa.jar-reporting-file.package}&#x0D;&#x0A;&#x09;&#x09;${jpa.jar-reporting-win-file.package}&#x0D;&#x0A;&#x09;&#x09;${jpa.comment.start}add jar-file here${jpa.comment.end}" />
			<loadfile property="jpa.mapping-file" srcfile="../HinemosManager/resources/mapping-file" />
			<replace file="../HinemosManager/build/META-INF_@{dir.to}/persistence.xml"
				token="&#x09;&#x09;${jpa.comment.start}add mapping-file here${jpa.comment.end}"
				value="${jpa.mapping-file}&#x0D;&#x0A;&#x09;&#x09;${jpa.comment.start}add mapping-file here${jpa.comment.end}" />
		</sequential>
	</macrodef>
	<target name="jpa_config_rhel" description="generate jpa configuration">
		<jpa_config.mac dir.lib="%%HINEMOS_HOME%%/lib" dir.from="${rhel.dir}" dir.to="RHEL" jar.diff="${jar.rhel}" dir.plugin="%%HINEMOS_HOME%%/plugins" reporting.jar.diff="HinemosReportingRhel.jar" />
	</target>
	<target name="jpa_config_win" description="generate jpa configuration">
		<jpa_config.mac dir.lib="../lib" dir.from="${win.dir}" dir.to="WIN" jar.diff="${jar.win}" dir.plugin="../lib"  reporting.jar.diff="HinemosReportingWin.jar" />
	</target>

	<target name="proxy_install">
		<copy file="${rest.proxy.dir}/java/target/${jar.rest.proxy}" todir="../HinemosManager/lib/" />
		<copy file="${rest.proxy.dir}/java/target/${jar.rest.proxy}" todir="../HinemosClient/lib/" />
		<copy file="${rest.proxy.dir}/java/target/${jar.rest.proxy}" todir="../HinemosWorkers/lib/" />
		<copy file="${rest.proxy.dir}/java/target/${jar.rest.proxy}" todir="${jar.dir}/" />
	</target>
	
	<target name="webclient">
		<delete dir="${agentws.dir}" failonerror="true" />
		<mkdir dir="${agentws.dir}" />
		<delete dir="${wsdl.dir}" failonerror="true" />
		<mkdir dir="${wsdl.dir}" />
		<delete dir="${wsdlsrc.dir}" failonerror="true" />
		<mkdir dir="${wsdlsrc.dir}" />
		<delete file="${jar.dir}/AgentWS.jar" failonerror="true"/>

		<path id="ws.class.path">
			<fileset dir="../HinemosCommon">
				<include name="${jar.dir}/HinemosCommon.jar"/>
				<include name="wslib/*.jar"/>
				<include name="commonlib/commons-logging-1.2.jar"/>
			</fileset>
			<fileset dir=".">
				<include name="${jar.dir}/HinemosManager.jar"/>
				<include name="lib/javax.persistence_2.1.1.v201509150925.jar"/>
				<include name="lib/jsch-0.1.55.jar"/>
			</fileset>
		</path>

		<taskdef name="wsgen" classname="com.sun.tools.ws.ant.WsGen">
			<classpath refid="ws.class.path"/>
		</taskdef>
		<macrodef name="wsgen.mac">
			<attribute name="sei.class" />
			<sequential>
				<wsgen
					fork="false"
					verbose="true"
					destdir="${wsdlsrc.dir}"
					resourcedestdir="${wsdl.dir}"
					keep="false"
					genwsdl="true"
					sei="@{sei.class}"
					encoding="${compile.encode}">
					<classpath refid="ws.class.path"/>
				</wsgen>
			</sequential>
		</macrodef>

		<wsgen.mac sei.class="com.clustercontrol.ws.agent.AgentEndpoint"/>
		<wsgen.mac sei.class="com.clustercontrol.ws.agentbinary.AgentBinaryEndpoint"/>
		<wsgen.mac sei.class="com.clustercontrol.ws.agentnodeconfig.AgentNodeConfigEndpoint"/>
		<wsgen.mac sei.class="com.clustercontrol.ws.agenthub.AgentHubEndpoint"/>
		<taskdef name="wsimport" classname="com.sun.tools.ws.ant.WsImport">
			<classpath refid="ws.class.path"/>
		</taskdef>
		<macrodef name="wsimport.mac">
			<attribute name="dir" />
			<attribute name="service.wsdl" />
			<sequential>
				<wsimport
					encoding="${compile.encode}"
					keep="true"
					destdir="@{dir}"
					wsdl="${basedir}/${wsdl.dir}/@{service.wsdl}"
					wsdllocation="file:../../lib/@{service.wsdl}">
					<produces dir="@{dir}" includes="@{dir}/**/*.java" />
					<jvmarg value="-J-Djavax.xml.accessExternalDTD=all" />
				</wsimport>
			</sequential>
		</macrodef>

		<wsimport.mac dir="${agentws.dir}" service.wsdl="AgentEndpointService.wsdl" />
		<wsimport.mac dir="${agentws.dir}" service.wsdl="AgentBinaryEndpointService.wsdl" />
		<wsimport.mac dir="${agentws.dir}" service.wsdl="AgentNodeConfigEndpointService.wsdl" />
		<wsimport.mac dir="${agentws.dir}" service.wsdl="AgentHubEndpointService.wsdl" />
		<!-- sourcedestdir="${agentws.dir}" -->
		<delete>
			<fileset dir="build/agentws" includes="**/*.class" />
		</delete>
		<javac
			destdir="build/agentws"
			failonerror="true"
			classpathref="id.compile.classpath.local"
			source="${compile.version}"
			target="${compile.version}"
			bootclasspath="${boot.classpath}"
			encoding="${compile.encode}"
			includeantruntime="false"
			debug="on">
			<src path="build/agentws" />
		</javac>
		<jar jarfile="${jar.dir}/AgentWS.jar" manifest="${build.dir}/MANIFEST.MF">
			<fileset dir="./${agentws.dir}">
				<include name="**/*.*"/>
			</fileset>
		</jar>
	</target>

	<target name="war" depends="compile">
		<delete dir="${war.dir}" failonerror="true" />
		<mkdir dir="${war.dir}" />
		<mkdir dir="${war.dir}/${class.dir}" />
		<mkdir dir="${war.dir}/${project.name}" />
		<mkdir dir="${war.dir}/${project.name}/META-INF" />
		<mkdir dir="${war.dir}/${project.name}/WEB-INF" />
		<mkdir dir="${war.dir}/${project.name}/WEB-INF/classes" />
		<mkdir dir="${war.dir}/${project.name}/WEB-INF/lib" />

		<copy todir="${war.dir}/${project.name}/WEB-INF/lib" overwrite="true">
			<fileset dir="../HinemosCommon/commonLib">
				<include name="*.jar" />
			</fileset>
			<fileset dir="../HinemosCommon/${jar.dir}">
				<include name="${jar.HinemosCommon}" />
			</fileset>
			<fileset dir="./lib">
				<include name="*.jar" />
				<exclude name="eclipselink-src.jar" />
				<exclude name="eclipselink.jar" />
			</fileset>
			<fileset dir="./lib_rest">
				<exclude name="*sources.jar" />
				<include name="*.jar" />
			</fileset>
		</copy>

		<javac destdir="${war.dir}/${class.dir}" failonerror="true" classpathref="id.compile.classpath.local" source="${compile.version.manager}" target="${compile.version.manager}" encoding="${compile.encode}" includeantruntime="false" debug="on">
			<src path="for_war" />
		</javac>


		<copy todir="${war.dir}/${project.name}/WEB-INF/classes" overwrite="true">
			<fileset dir="${build.dir}/${class.dir}">
				<include name="**/*.*" />
				<include name="**/model/*.*" />
				<exclude name="**/platform/**" />
			</fileset>

			<fileset dir="${war.dir}/${class.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>

		<copy todir="${war.dir}/${project.name}/WEB-INF" overwrite="true">
			<fileset dir="for_war">
				<include name="web.xml" />
			</fileset>
		</copy>

		<copy todir="${war.dir}/${project.name}/WEB-INF" overwrite="true">
			<fileset dir="for_war">
				<include name="web.xml" />
			</fileset>
		</copy>

		<copy todir="${war.dir}/${project.name}/META-INF" overwrite="true">
			<fileset dir="for_war">
				<include name="MANIFEST.MF" />
			</fileset>
		</copy>

		<copy todir="${war.dir}/${project.name}" overwrite="true">
			<fileset dir="for_war">
				<include name="index.html" />
			</fileset>
		</copy>

		<zip destfile="${war.dir}/${project.name}.war" basedir="${war.dir}/${project.name}" includes="**/*.*" />
	</target>

	<target name="build_proxy" depends="war">
		<delete dir="${rest.proxy.dir}" failonerror="true" />
		<mkdir dir="${rest.proxy.dir}" />

	    <!-- Prepare the custom template for the OpenAPI generator. -->
	    <unzip src="${openapi-generator.dir}/openapi-generator-cli.jar"
	           dest="${rest.proxy.dir}/openapi-generator-template">
	    	<patternset>
	        	<include name="Java/**"/>
	    	</patternset>
	    	
		</unzip>
	    <copy todir="${rest.proxy.dir}/openapi-generator-template" overwrite="true">
			<fileset dir="for_proxy/template">
				<include name="**/*" />
			</fileset>
		</copy>

		<copy todir="${openliberty.server.dir}/dropins" overwrite="true">
			<fileset dir="${war.dir}">
				<include name="${project.name}.war" />
			</fileset>
		</copy>

		<exec executable="${openliberty.dir}/bin/server.bat">
			<arg value="start"/>
			<arg value="server1" />
		</exec>

		<sleep minutes="2" />

		<exec executable="powershell">
			<arg value="Invoke-WebRequest" />
			<arg value="-Uri" />
			<arg value="http://localhost:9080/openapi" />
			<arg value="-OutFile" />
			<arg value="${rest.proxy.dir}/openapi_tmp.yaml" />
		</exec>

		<!-- No need to wait for a stop, so run in a separate process-->
		<exec executable="${openliberty.dir}/bin/server.bat" spawn="true">
			<arg value="stop"/>
			<arg value="server1" />
		</exec>

		<delete file="${openliberty.server.dir}/dropins/${project.name}.war" />

		<exec executable="java">
			<arg value="-jar" />
			<arg value="ant/OpenApiYamlConverter.jar" />
			<arg value="${rest.proxy.dir}/openapi_tmp.yaml" />
			<arg value="${rest.proxy.dir}/openapi.yaml" />
			<arg value="ant/openapi_yaml_convert_conf.properties" />
		</exec>

		<exec executable="java">
			<arg value="-jar" />
			<arg value="${openapi-generator.dir}/openapi-generator-cli.jar" />
			<arg value="generate" />
			<arg value="-i" />
			<arg value="${rest.proxy.dir}/openapi.yaml" />
			<arg value="-g" />
			<arg value="python" />
			<arg value="-o" />
			<arg value="${rest.proxy.dir}/python" />
			<arg value="--skip-validate-spec" />
		</exec>

		<exec executable="java">
			<arg value="-jar" />
			<arg value="${openapi-generator.dir}/openapi-generator-cli.jar" />
			<arg value="generate" />
			<arg value="-i" />
			<arg value="${rest.proxy.dir}/openapi.yaml" />
			<arg value="-g" />
			<arg value="java" />
			<arg value="-o" />
			<arg value="${rest.proxy.dir}/java" />
			<arg value="--api-package" />
			<arg value="com.clustercontrol.rest.client" />
			<arg value="--skip-validate-spec" />
			<arg value="-t" />
			<arg value="${rest.proxy.dir}/openapi-generator-template/Java" />
		</exec>

		<exec executable="CMD">
			<arg line="/C mvn install -Dmaven.test.skip=true -Dmaven.javadoc.skip=true -Dmaven.source.skip=true -f ${rest.proxy.dir}/java/pom.xml -Dmaven.repo.local=C:\maven_repository" />
		</exec>

		<move file="${rest.proxy.dir}/java/target/openapi-java-client-1.0.0.jar" tofile="${rest.proxy.dir}/java/target/${jar.rest.proxy}" />
		
		<antcall target="proxy_install" />
	</target>

	<!-- Do not generate python proxy -->
	<target name="build_proxy_without_python" depends="war">
		<delete dir="${rest.proxy.dir}" failonerror="true" />
		<mkdir dir="${rest.proxy.dir}" />

	    <!-- Prepare the custom template for the OpenAPI generator. -->
	    <unzip src="${openapi-generator.dir}/openapi-generator-cli.jar"
	           dest="${rest.proxy.dir}/openapi-generator-template">
	    	<patternset>
	        	<include name="Java/**"/>
	    	</patternset>
	    	
		</unzip>
	    <copy todir="${rest.proxy.dir}/openapi-generator-template" overwrite="true">
			<fileset dir="for_proxy/template">
				<include name="**/*" />
			</fileset>
		</copy>

		<copy todir="${openliberty.server.dir}/dropins" overwrite="true">
			<fileset dir="${war.dir}">
				<include name="${project.name}.war" />
			</fileset>
		</copy>

		<exec executable="${openliberty.dir}/bin/server.bat">
			<arg value="start"/>
			<arg value="server1" />
		</exec>

		<sleep minutes="2"/>

		<exec executable="powershell">
			<arg value="Invoke-WebRequest" />
			<arg value="-Uri" />
			<arg value="http://localhost:9080/openapi" />
			<arg value="-OutFile" />
			<arg value="${rest.proxy.dir}/openapi_tmp.yaml" />
		</exec>

		<!-- No need to wait for a stop, so run in a separate process-->
		<exec executable="${openliberty.dir}/bin/server.bat" spawn="true">
			<arg value="stop"/>
			<arg value="server1" />
		</exec>

		<delete file="${openliberty.server.dir}/dropins/${project.name}.war" />

		<exec executable="java">
			<arg value="-jar" />
			<arg value="ant/OpenApiYamlConverter.jar" />
			<arg value="${rest.proxy.dir}/openapi_tmp.yaml" />
			<arg value="${rest.proxy.dir}/openapi.yaml" />
			<arg value="ant/openapi_yaml_convert_conf.properties" />
		</exec>

		<exec executable="java">
			<arg value="-jar" />
			<arg value="${openapi-generator.dir}/openapi-generator-cli.jar" />
			<arg value="generate" />
			<arg value="-i" />
			<arg value="${rest.proxy.dir}/openapi.yaml" />
			<arg value="-g" />
			<arg value="java" />
			<arg value="-o" />
			<arg value="${rest.proxy.dir}/java" />
			<arg value="--api-package" />
			<arg value="com.clustercontrol.rest.client" />
			<arg value="--skip-validate-spec" />
			<arg value="-t" />
			<arg value="${rest.proxy.dir}/openapi-generator-template/Java" />
		</exec>

		<exec executable="CMD">
			<arg line="/C mvn install -Dmaven.test.skip=true -Dmaven.javadoc.skip=true -Dmaven.source.skip=true -f ${rest.proxy.dir}/java/pom.xml -Dmaven.repo.local=C:\maven_repository" />
		</exec>

		<move file="${rest.proxy.dir}/java/target/openapi-java-client-1.0.0.jar" tofile="${rest.proxy.dir}/java/target/${jar.rest.proxy}" />
		
		<antcall target="proxy_install" />
	</target>
	
	<!-- All -->
	<target name="all" depends="dependency">
		<!-- <delete> will recursely remove files under build\tmp\src_platform -->
		<exec executable="CMD" failonerror="false">
			<arg line="/C rmdir build\tmp\src_platform" />
		</exec>
		<delete dir="build" failonerror="true" />
		<antcall target="clean" />

		<!-- win -->
		<antcall target="win_quick" />
		<antcall target="jpa_config_win" />

		<!-- rhel -->
		<antcall target="rhel_quick" />
		<antcall target="jpa_config_rhel" />

		<antcall target="jar_main" />
		<antcall target="build_publish" />
		<antcall target="copy_messages" />
		<antcall target="webclient" />
		<antcall target="build_proxy" />

		<available classname="org.eclipse.core.resources.ant.RefreshLocalTask"
				property="eclipse_jar_available"/>
		<antcall target="refresh" />
	</target>

	<target name="allfortest" depends="dependency">
		<!-- <delete> will recursely remove files under build\tmp\src_platform -->
		<exec executable="CMD" failonerror="false">
			<arg line="/C rmdir build\tmp\src_platform" />
		</exec>
		<delete dir="build" failonerror="true" />
		<antcall target="clean" />

		<!-- rhel -->
		<antcall target="rhel_quick" />
		<antcall target="jpa_config_rhel" />
		
		<!-- win -->
		<antcall target="win_quick" />
		<antcall target="jpa_config_win" />

		<antcall target="jar_main" />
		<antcall target="build_publish" />
		<antcall target="copy_messages" />
		<antcall target="webclient" />
		<antcall target="build_proxy" />

		<available classname="org.eclipse.core.resources.ant.RefreshLocalTask"
				property="eclipse_jar_available"/>
		<antcall target="refresh" />
	</target>

	<target name="all_without_python_proxy" depends="dependency">
		<!-- <delete> will recursely remove files under build\tmp\src_platform -->
		<exec executable="CMD" failonerror="false">
			<arg line="/C rmdir build\tmp\src_platform" />
		</exec>
		<delete dir="build" failonerror="true" />
		<antcall target="clean" />

		<!-- win -->
		<antcall target="win_quick" />
		<antcall target="jpa_config_win" />

		<!-- rhel -->
		<antcall target="rhel_quick" />
		<antcall target="jpa_config_rhel" />

		<antcall target="jar_main" />
		<antcall target="build_publish" />
		<antcall target="copy_messages" />
		<antcall target="webclient" />
		<antcall target="build_proxy_without_python" />

		<available classname="org.eclipse.core.resources.ant.RefreshLocalTask"
				property="eclipse_jar_available"/>
		<antcall target="refresh" />
	</target>
	
	<target name="win" depends="dependency">
		<delete dir="build" failonerror="true" />
		<antcall target="clean" />

		<!-- win -->
		<antcall target="win_quick" />
		<antcall target="jpa_config_win" />

		<antcall target="jar_main" />
		<antcall target="copy_messages" />
		<antcall target="webclient" />

		<available classname="org.eclipse.core.resources.ant.RefreshLocalTask"
				property="eclipse_jar_available"/>
		<antcall target="refresh" />
	</target>

	<target name="rhel" depends="dependency">
		<delete dir="build" failonerror="true" />
		<antcall target="clean" />

		<!-- rhel -->
		<antcall target="rhel_quick" />
		<antcall target="jpa_config_rhel" />

		<antcall target="jar_main" />
		<antcall target="copy_messages" />
		<antcall target="webclient" />

		<available classname="org.eclipse.core.resources.ant.RefreshLocalTask"
				property="eclipse_jar_available"/>
		<antcall target="refresh" />
	</target>

	<target name="all_without_interface" depends="dependency">
		<antcall target="clean" />
		<antcall target="all_quick" />
	</target>

	<target name="clean_classes" description="Clean Java's Class files">
		<delete dir="${build.dir}/${class.dir}" failonerror="true" />
		<mkdir dir="${build.dir}/${class.dir}" />
	</target>

	<target name="win_quick" depends="dependency">
		<antcall target="clean_classes" />
		<antcall target="switch_to_win" />
		<antcall target="compile" />
		<antcall target="manifest" />
		<antcall target="jar_diff_win" />
	</target>

	<target name="rhel_quick" depends="dependency">
		<antcall target="clean_classes" />
		<antcall target="switch_to_rhel" />
		<antcall target="compile" />
		<antcall target="manifest" />
		<antcall target="jar_diff_rhel" />
	</target>

	<target name="all_quick" depends="dependency">
		<antcall target="clean" />

		<antcall target="win_quick" />
		<antcall target="rhel_quick" />

		<antcall target="jar_main" />
		<antcall target="build_publish" />
		<antcall target="copy_messages" />
	</target>

	<target name="refresh" if="eclipse_jar_available">
		<eclipse.refreshLocal resource="${project.name}" depth="infinite"/>
		<eclipse.incrementalBuild project="${project.name}" kind="clean" />
	</target>

	<target name="copy_messages">
		<copy todir="../HinemosClient/lib/" overwrite="true">
			<fileset dir="../HinemosManager/resources">
				<include name="messages_*.properties" />
			</fileset>
		</copy>
	</target>

	<!-- Classpath for building PublishXXX.jar -->
	<path id="publish.compile.classpath">
		<fileset dir="${jar.dir}">
			<include name="${jar.file}" />
			<include name="${jar.rhel}" />
		</fileset>
		<path refid="id.compile.classpath.local" />
	</path>

	<macrodef name="build-publish">
		<attribute name="src.suffix" />
		<attribute name="jar.suffix" />
		<attribute name="bin.dir" default="${build.dir}/bin_publish_@{src.suffix}" />
		<sequential>
			<!-- clean_classes" -->
			<delete dir="@{bin.dir}" failonerror="true" />
			<mkdir dir="@{bin.dir}" />

			<!-- compile -->
			<javac
				destdir="@{bin.dir}"
				failonerror="true"
				classpathref="publish.compile.classpath"
				source="${compile.version.manager}"
				target="${compile.version.manager}"
				encoding="${compile.encode}"
				includeantruntime="false"
				debug="on">
				<src path="src_publish_@{src.suffix}" />
			</javac>

			<!-- jar -->
			<jar jarfile="${jar.dir}/Publish@{jar.suffix}.jar" manifest="${build.dir}/MANIFEST.MF">
				<fileset dir="@{bin.dir}">
					<include name="**/*.class"/>
				</fileset>
				<fileset dir="src_publish_@{src.suffix}">
					<include name="META-INF/services/*" />
				</fileset>
			</jar>
		</sequential>
	</macrodef>

	<target name="build_publish">
		<build-publish src.suffix="oss" jar.suffix="OSS" />
		<build-publish src.suffix="ent" jar.suffix="Enterprise" />
	</target>
</project>
