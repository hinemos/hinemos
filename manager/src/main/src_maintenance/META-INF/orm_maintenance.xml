<?xml version="1.0" encoding="UTF-8"?>
<entity-mappings version="2.0"
	xmlns="http://java.sun.com/xml/ns/persistence/orm"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence/orm http://java.sun.com/xml/ns/persistence/orm_2_0.xsd">

	<!-- SelectMaintenanceInfo -->
	<named-query name="MaintenanceInfoEntity.findAllOrderByMaintenanceId">
		<query>
			<![CDATA[
				SELECT a FROM MaintenanceInfo a ORDER BY a.maintenanceId
			]]>
		</query>
	</named-query>
	<named-query name="MaintenanceInfoEntity.findByCalendarId">
		<query>
			<![CDATA[
				SELECT a FROM MaintenanceInfo a
				WHERE a.calendarId = :calendarId
				ORDER BY a.maintenanceId
			]]>
		</query>
	</named-query>

	<!-- SelectMaintenanceTypeMst -->
	<named-query name="MaintenanceTypeMstEntity.findAll">
		<query>
			<![CDATA[
				SELECT a FROM MaintenanceTypeMst a ORDER BY a.order_no
			]]>
		</query>
	</named-query>

	<!-- MaintenanceEvent -->
	<named-query name="EventLogEntity.deleteByGenerationDate">
		<query>
			<![CDATA[
				DELETE FROM EventLogEntity c WHERE c.generationDate < :generationDate
			]]>
		</query>
	</named-query>
	<named-query name="EventLogEntity.deleteByGenerationDateConfigFlg">
		<query>
			<![CDATA[
				DELETE FROM EventLogEntity c WHERE c.generationDate < :generationDate AND c.confirmFlg='1'
			]]>
		</query>
	</named-query>
	<named-query name="EventLogEntity.deleteByGenerationDateAndOwnerRoleId">
		<query>
			<![CDATA[
				DELETE FROM EventLogEntity c WHERE c.generationDate < :generationDate AND c.ownerRoleId = :ownerRoleId
			]]>
		</query>
	</named-query>
	<named-query name="EventLogEntity.deleteByGenerationDateConfigFlgAndOwnerRoleId">
		<query>
			<![CDATA[
				DELETE FROM EventLogEntity c WHERE c.generationDate < :generationDate AND c.confirmFlg='1' AND c.ownerRoleId = :ownerRoleId
			]]>
		</query>
	</named-query>
	
	<!-- HinemosProperty -->
	<named-query name="HinemosPropertyEntity.findAll">
		<query>
			<![CDATA[
				SELECT a FROM HinemosPropertyInfo a ORDER BY a.key
			]]>
		</query>
	</named-query>
	<named-query name="HinemosPropertyEntity.findByKey">
		<query>
			<![CDATA[
				SELECT a FROM HinemosPropertyInfo a
				WHERE a.key = :key
				ORDER BY a.key
			]]>
		</query>
	</named-query>

	<!-- MaintenanceJob -->
	<named-native-query name="JobCompletedSessionsEntity.createTable">
		<query>
			<![CDATA[
				CREATE TEMPORARY TABLE cc_job_completed_sessions AS SELECT session_id FROM log.cc_job_session LIMIT 0
			]]>
		</query>
	</named-native-query>
	<named-native-query name="JobCompletedSessionsEntity.dropTable">
		<query>
			<![CDATA[
				DROP TABLE cc_job_completed_sessions
			]]>
		</query>
	</named-native-query>
	<named-native-query name="JobCompletedSessionsEntity.insertJobSessionJob">
		<query>
			<![CDATA[
				INSERT INTO cc_job_completed_sessions SELECT session_id FROM log.cc_job_session_job
					WHERE start_date < ?1 AND (jobunit_id, job_id, session_id ) IN (SELECT jobunit_id, job_id, session_id FROM log.cc_job_session);
			]]>
		</query>
	</named-native-query>
	<named-native-query name="JobCompletedSessionsEntity.insertJobSessionJobByStatus">
		<query>
			<![CDATA[
				INSERT INTO cc_job_completed_sessions SELECT session_id FROM log.cc_job_session_job WHERE (status='300' OR status='301') AND
					start_date < ?1 AND (jobunit_id, job_id, session_id ) IN (SELECT jobunit_id, job_id, session_id FROM log.cc_job_session);
			]]>
		</query>
	</named-native-query>
	<named-native-query name="JobCompletedSessionsEntity.insertJobSessionJobByOwnerRoleId">
		<query>
			<![CDATA[
				INSERT INTO cc_job_completed_sessions SELECT session_id FROM log.cc_job_session_job
					WHERE start_date < ?1 AND owner_role_id = ?2 AND (jobunit_id, job_id, session_id ) IN (SELECT jobunit_id, job_id, session_id FROM log.cc_job_session);
			]]>
		</query>
	</named-native-query>
	<named-native-query name="JobCompletedSessionsEntity.insertJobSessionJobByStatusAndOwnerRoleId">
		<query>
			<![CDATA[
				INSERT INTO cc_job_completed_sessions SELECT session_id FROM log.cc_job_session_job WHERE (status='300' OR status='301') AND
					start_date < ?1 AND owner_role_id = ?2 AND (jobunit_id, job_id, session_id ) IN (SELECT jobunit_id, job_id, session_id FROM log.cc_job_session);
			]]>
		</query>
	</named-native-query>
	<named-native-query name="JobSessionEntity.deleteByJobCompletedSessions">
		<query>
			<![CDATA[
				DELETE FROM log.cc_job_session WHERE session_id IN (SELECT session_id FROM cc_job_completed_sessions)
			]]>
		</query>
	</named-native-query>
	<named-native-query name="NotifyRelationInfoEntity.deleteByJobCompletedSessions">
		<query>
			<![CDATA[
				DELETE FROM setting.cc_notify_relation_info WHERE ( notify_group_id ) LIKE ANY (SELECT DISTINCT 'JOB_SES-' || session_id || '%' FROM cc_job_completed_sessions)
			]]>
		</query>
	</named-native-query>
	<named-native-query name="MonitorStatusEntity.deleteByJobCompletedSessions">
		<query>
			<![CDATA[
				DELETE FROM setting.cc_monitor_status WHERE plugin_id='JOB' AND monitor_id IN (SELECT session_id FROM cc_job_completed_sessions)
			]]>
		</query>
	</named-native-query>
	<named-native-query name="NotifyHistoryEntity.deleteByJobCompletedSessions">
		<query>
			<![CDATA[
				DELETE FROM setting.cc_notify_history WHERE plugin_id='JOB' AND monitor_id IN (SELECT session_id FROM cc_job_completed_sessions)
			]]>
		</query>
	</named-native-query>
	
	<!-- MaintenanceCollectData -->
	<named-query name="CollectData.deleteByDateTimeAndMonitorId">
		<query>
			<![CDATA[
				DELETE FROM CollectData a WHERE a.id.time < :dateTime
					AND a.id.collectorid IN (SELECT c.collectorid FROM CollectKeyInfo c WHERE c.id.monitorId = :monitorId)
			]]>
		</query>
	</named-query>
	<named-query name="CollectData.deleteByDateTime">
		<query>
			<![CDATA[
				DELETE FROM CollectData a WHERE a.id.time < :dateTime
			]]>
		</query>
	</named-query>
	<named-query name="SummaryHour.deleteByDateTimeAndMonitorId">
		<query>
			<![CDATA[
				DELETE FROM SummaryHour a WHERE a.id.time < :dateTime
					AND a.id.collectorid IN (SELECT c.collectorid FROM CollectKeyInfo c WHERE c.id.monitorId = :monitorId)
			]]>
		</query>
	</named-query>
	<named-query name="SummaryHour.deleteByDateTime">
		<query>
			<![CDATA[
				DELETE FROM SummaryHour a WHERE a.id.time < :dateTime
			]]>
		</query>
	</named-query>
	<named-query name="SummaryDay.deleteByDateTimeAndMonitorId">
		<query>
			<![CDATA[
				DELETE FROM SummaryDay a WHERE a.id.time < :dateTime
					AND a.id.collectorid IN (SELECT c.collectorid FROM CollectKeyInfo c WHERE c.id.monitorId = :monitorId)
			]]>
		</query>
	</named-query>
	<named-query name="SummaryDay.deleteByDateTime">
		<query>
			<![CDATA[
				DELETE FROM SummaryDay a WHERE a.id.time < :dateTime
			]]>
		</query>
	</named-query>
	<named-query name="SummaryMonth.deleteByDateTimeAndMonitorId">
		<query>
			<![CDATA[
				DELETE FROM SummaryMonth a WHERE a.id.time < :dateTime
					AND a.id.collectorid IN (SELECT c.collectorid FROM CollectKeyInfo c WHERE c.id.monitorId = :monitorId)
			]]>
		</query>
	</named-query>
	<named-query name="SummaryMonth.deleteByDateTime">
		<query>
			<![CDATA[
				DELETE FROM SummaryMonth a WHERE a.id.time < :dateTime
			]]>
		</query>
	</named-query>
	<named-query name="CollectStringData.deleteByDateTimeAndMonitorId">
		<query>
			<![CDATA[
				DELETE FROM CollectStringData a WHERE a.time < :dateTime
					AND a.id.collectId IN (SELECT c.collectId FROM CollectStringKeyInfo c WHERE c.id.monitorId = :monitorId)
			]]>
		</query>
	</named-query>
	<named-query name="CollectStringData.deleteByDateTime">
		<query>
			<![CDATA[
				DELETE FROM CollectStringData a WHERE a.time < :dateTime
			]]>
		</query>
	</named-query>
</entity-mappings>
